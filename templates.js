import {styles} from './styles.js';

// –ë–∞–∑–æ–≤—ã–π HTML —à–∞–±–ª–æ–Ω
export function createBasePage(title, content, additionalStyles = '') {
    return `
<!DOCTYPE html>
<html lang="ru">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>${title}</title>
  <style>
    ${styles}
    ${additionalStyles}
  </style>
</head>
<body>
  <div class="container">
    ${content}
  </div>
</body>
</html>`;
}

// –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ (–ª–µ–Ω–¥–∏–Ω–≥)
// –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ (–ª–µ–Ω–¥–∏–Ω–≥) - —Ç–æ–ª—å–∫–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∏ –ø–µ—Ä–µ—Ö–æ–¥ –≤ –±–æ—Ç–∞
export function createLandingPage(botUsername) {
    const content = `
    <h1>üéµ Spotify –≤ Telegram</h1>
    <p>–ü–æ–∫–∞–∂–∏ —á—Ç–æ —Å–ª—É—à–∞–µ—à—å –ø—Ä—è–º–æ –≤ –ø—Ä–æ—Ñ–∏–ª–µ Telegram —á–µ—Ä–µ–∑ –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–∞–Ω–∞–ª</p>
    
    <a href="https://t.me/${botUsername}" class="btn">
      ü§ñ –û—Ç–∫—Ä—ã—Ç—å –±–æ—Ç–∞
    </a>
    
    <div class="steps">
      <h3>–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:</h3>
      <p><strong>1.</strong> –û—Ç–∫—Ä—ã–≤–∞–µ—à—å –±–æ—Ç–∞ –≤ Telegram</p>
      <p><strong>2.</strong> –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ—à—å Spotify –∞–∫–∫–∞—É–Ω—Ç</p>
      <p><strong>3.</strong> –ë–æ—Ç —Å–æ–∑–¥–∞–µ—Ç –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–∞–Ω–∞–ª</p>
      <p><strong>4.</strong> –î–æ–±–∞–≤–ª—è–µ—à—å –∫–∞–Ω–∞–ª –≤ –ø—Ä–æ—Ñ–∏–ª—å</p>
      <p><strong>5.</strong> –¢—Ä–µ–∫ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏!</p>
      
      <h3 style="margin-top: 20px;">–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:</h3>
      <p>‚Ä¢ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥</p>
      <p>‚Ä¢ –ö—Ä–∞—Å–∏–≤—ã–π –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä —Å –≤—Ä–µ–º–µ–Ω–µ–º</p>
      <p>‚Ä¢ –û–±–ª–æ–∂–∫–∞ —Ç—Ä–µ–∫–∞ –∫–∞–∫ –∞–≤–∞—Ç–∞—Ä –∫–∞–Ω–∞–ª–∞</p>
      <p>‚Ä¢ –ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞ = –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç—Ä–µ–∫–∞</p>
      <p>‚Ä¢ –†–∞–±–æ—Ç–∞–µ—Ç –≤ —Ñ–æ–Ω–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏</p>
    </div>
    
    <div style="margin-top: 30px; padding: 20px; background: rgba(255,255,255,0.1); border-radius: 16px;">
      <h3>üéØ –ó–∞—á–µ–º —ç—Ç–æ –Ω—É–∂–Ω–æ?</h3>
      <p>–ü–æ–∫–∞–∑—ã–≤–∞–π –¥—Ä—É–∑—å—è–º —Å–≤–æ–π –º—É–∑—ã–∫–∞–ª—å–Ω—ã–π –≤–∫—É—Å –ø—Ä—è–º–æ –≤ –ø—Ä–æ—Ñ–∏–ª–µ! –í—Å–µ —É–≤–∏–¥—è—Ç —á—Ç–æ —Ç—ã —Å–ª—É—à–∞–µ—à—å –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏.</p>
    </div>
  `;

    return createBasePage('Telegram Spotify Status', content);
}

// –°—Ç—Ä–∞–Ω–∏—Ü–∞ —É—Å–ø–µ—à–Ω–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
export function createSuccessPage() {
    const content = `
    <div class="success-icon">‚úÖ</div>
    <h1>Spotify –ø–æ–¥–∫–ª—é—á–µ–Ω!</h1>
    <p>–û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –≤–∞—à–∞ –º—É–∑—ã–∫–∞ –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤ –ø—Ä–æ—Ñ–∏–ª–µ Telegram.</p>
    
    <div class="steps">
      <h3>–ß—Ç–æ –¥–∞–ª—å—à–µ:</h3>
      <p><strong>1.</strong> –û—Ç–∫—Ä–æ–π—Ç–µ Telegram</p>
      <p><strong>2.</strong> –ù–∞–π–¥–∏—Ç–µ —Å–æ–∑–¥–∞–Ω–Ω—ã–π –∫–∞–Ω–∞–ª –≤ –ø–æ–∏—Å–∫–µ</p>
      <p><strong>3.</strong> –î–æ–±–∞–≤—å—Ç–µ –∫–∞–Ω–∞–ª –≤ —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å</p>
      <p><strong>4.</strong> –í–∫–ª—é—á–∏—Ç–µ –º—É–∑—ã–∫—É –≤ Spotify</p>
    </div>
    
    <p style="margin-top: 24px; opacity: 0.7;">
      –ú–æ–∂–µ—Ç–µ –∑–∞–∫—Ä—ã—Ç—å —ç—Ç—É –≤–∫–ª–∞–¥–∫—É
    </p>
  `;

    return createBasePage('–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!', content);
}

// –°—Ç—Ä–∞–Ω–∏—Ü–∞ –æ—à–∏–±–∫–∏
export function createErrorPage(error, description = '') {
    const content = `
    <div class="success-icon">‚ùå</div>
    <h1>–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è</h1>
    <p><strong>–ß—Ç–æ —Å–ª—É—á–∏–ª–æ—Å—å:</strong> ${error}</p>
    ${description ? `<p>${description}</p>` : ''}
    
    <a href="/" class="btn" style="margin-top: 20px;">
      üîÑ –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
    </a>
    
    <div class="steps">
      <h3>–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:</h3>
      <p>‚Ä¢ –û—Ç–∫–∞–∑ –≤ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ Spotify</p>
      <p>‚Ä¢ –ü—Ä–æ–±–ª–µ–º—ã —Å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ–º</p>
      <p>‚Ä¢ –í—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–µ–ø–æ–ª–∞–¥–∫–∏ —Å–µ—Ä–≤–∏—Å–∞</p>
    </div>
  `;

    return createBasePage('–û—à–∏–±–∫–∞', content, `
    .container {
      background: rgba(220, 53, 69, 0.15);
      border: 1px solid rgba(220, 53, 69, 0.3);
    }
    h1 {
      background: linear-gradient(45deg, #dc3545, #ff4757) !important;
      -webkit-background-clip: text !important;
      -webkit-text-fill-color: transparent !important;
      background-clip: text !important;
    }
  `);
}

// –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å—Ç–∞—Ç—É—Å–∞/–¥–∞—à–±–æ—Ä–¥
export function createDashboardPage(user, track) {
    const trackInfo = track && track.is_playing ? `
    <div style="background: rgba(255,255,255,0.1); padding: 20px; border-radius: 16px; margin: 20px 0;">
      <h3>üéµ –°–µ–π—á–∞—Å –∏–≥—Ä–∞–µ—Ç:</h3>
      <p><strong>${track.item.name}</strong></p>
      <p>${track.item.artists.map(a => a.name).join(', ')}</p>
      <p style="font-family: monospace; background: rgba(0,0,0,0.3); padding: 8px; border-radius: 8px;">
        ${createProgressBarHTML(track.progress_ms, track.item.duration_ms)}
      </p>
    </div>
  ` : `
    <div style="background: rgba(255,255,255,0.05); padding: 20px; border-radius: 16px; margin: 20px 0;">
      <p>‚è∏Ô∏è –ù–∏—á–µ–≥–æ –Ω–µ –∏–≥—Ä–∞–µ—Ç</p>
      <p style="opacity: 0.7;">–í–∫–ª—é—á–∏—Ç–µ –º—É–∑—ã–∫—É –≤ Spotify</p>
    </div>
  `;

    const content = `
    <h1>üéõÔ∏è –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è</h1>
    <p>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, <strong>${user.name || '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}</strong>!</p>
    
    ${trackInfo}
    
    <div class="steps">
      <h3>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:</h3>
      <p><a href="/disconnect" style="color: #ff4757;">üîå –û—Ç–∫–ª—é—á–∏—Ç—å Spotify</a></p>
      <p><a href="/current-track?user_id=${user.id}" style="color: #1DB954;">üîÑ –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å</a></p>
    </div>
  `;

    return createBasePage('–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è', content);
}

// –ü—Ä–æ—Å—Ç–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä –¥–ª—è HTML
function createProgressBarHTML(current, total) {
    const progress = current / total;
    const barLength = 20;
    const filledLength = Math.floor(progress * barLength);

    const filled = '‚îÅ'.repeat(filledLength);
    const dot = '‚óè';
    const empty = '‚îÄ'.repeat(Math.max(0, barLength - filledLength - 1));

    const currentTime = formatTime(current);
    const remainingTime = formatTime(total - current);

    return `${currentTime} ${filled}${dot}${empty} -${remainingTime}`;
}

function formatTime(ms) {
    const minutes = Math.floor(ms / 60000);
    const seconds = Math.floor((ms % 60000) / 1000);
    return `${minutes}:${seconds.toString().padStart(2, '0')}`;
}
